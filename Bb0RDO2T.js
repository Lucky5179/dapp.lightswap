(function(){try{var t=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},r=new t.Error().stack;r&&(t._sentryDebugIds=t._sentryDebugIds||{},t._sentryDebugIds[r]="f01bb8f7-e000-4309-a58e-74a3f188c925",t._sentryDebugIdIdentifier="sentry-dbid-f01bb8f7-e000-4309-a58e-74a3f188c925")}catch{}})();let d;const c=new Uint8Array(16);function f(){if(!d&&(d=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!d))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return d(c)}const o=[];for(let t=0;t<256;++t)o.push((t+256).toString(16).slice(1));function n(t,r=0){return o[t[r+0]]+o[t[r+1]]+o[t[r+2]]+o[t[r+3]]+"-"+o[t[r+4]]+o[t[r+5]]+"-"+o[t[r+6]]+o[t[r+7]]+"-"+o[t[r+8]]+o[t[r+9]]+"-"+o[t[r+10]]+o[t[r+11]]+o[t[r+12]]+o[t[r+13]]+o[t[r+14]]+o[t[r+15]]}const p=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),a={randomUUID:p};function y(t,r,s){if(a.randomUUID&&!r&&!t)return a.randomUUID();t=t||{};const e=t.random||(t.rng||f)();if(e[6]=e[6]&15|64,e[8]=e[8]&63|128,r){s=s||0;for(let u=0;u<16;++u)r[s+u]=e[u];return r}return n(e)}export{y as v};
